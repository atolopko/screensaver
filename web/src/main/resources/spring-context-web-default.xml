<?xml version="1.0" encoding="UTF-8"?>

<!--
   $HeadURL$
   $Id$

   Copyright Â© 2006, 2010, 2011, 2012 by the President and Fellows of Harvard College.
   
   Screensaver is an open-source project developed by the ICCB-L and NSRB labs
   at Harvard Medical School. This software is distributed under the terms of
   the GNU General Public License.
-->

<!-- A top-level, composite Spring context configuration file, intended for use with the 
  Screensaver web application.  Allows a full Spring configuration to be referenced via a 
  single file. -->

<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

  <bean
    id="screensaverProperties"
    class="edu.harvard.med.screensaver.ScreensaverProperties"
    scope="singleton">
    <constructor-arg value="/screensaver.properties" />
    <constructor-arg>
      <bean class="edu.harvard.med.screensaver.db.ScreensaverPropertiesDatabaseConnectionSettingsResolver" />
    </constructor-arg>
  </bean>

  <!--  user authentication -->

  <bean
    id="currentScreensaverUser"
    class="edu.harvard.med.screensaver.ui.WebCurrentScreensaverUser"
    scope="session">
    <property
      name="dao"
      ref="genericEntityDao" />
    <property
       name="applicationProperties"
       ref="screensaverProperties" />
    <aop:scoped-proxy />
  </bean>

  <!--  Policy & Service configuration section for web application-->

  <bean
    id="entityViewPolicy"
    class="edu.harvard.med.screensaver.policy.DefaultEntityViewPolicy"
    scope="session">
    <aop:scoped-proxy />
  </bean>
  
  <bean
    id="entityEditPolicy"
    class="edu.harvard.med.screensaver.policy.DefaultEntityEditPolicy"
    scope="session">
    <aop:scoped-proxy />
  </bean>
  
  <bean id="smallMoleculeCherryPickRequestAllowancePolicy"
   class="edu.harvard.med.iccbl.screensaver.policy.cherrypicks.SmallMoleculeCherryPickRequestAllowancePolicy" >
    <constructor-arg ref="genericEntityDao"/>
  </bean>

  <bean id="rnaiCherryPickRequestAllowancePolicy"
   class="edu.harvard.med.iccbl.screensaver.policy.cherrypicks.RNAiCherryPickRequestAllowancePolicy" >
    <constructor-arg ref="genericEntityDao"/>
  </bean>
 
  <bean id="cherryPickPlateSourceWellMinimumVolumePolicy"
   class="edu.harvard.med.iccbl.screensaver.policy.cherrypicks.IccblCherryPickPlateSourceWellMinimumVolumePolicy">
  </bean>
 
  <bean id="urlEncrypter"
        class="edu.harvard.med.screensaver.util.DesUrlEncrypter">
      <constructor-arg value="#{screensaverProperties.map['screensaver.url_encrypter.password']}" />
      <constructor-arg value="IMAGE" />
  </bean>
  
  <bean id="structureImageProvider"
        class="edu.harvard.med.iccbl.screensaver.io.libraries.smallmolecule.PlateWellStructureImageLocator">
    <constructor-arg value="#{screensaverProperties.map['screensaver.images.base_url']}/structure_images/" />
    <constructor-arg ref="urlEncrypter" />
  </bean>
  
  <bean id="studyImageProvider"
        class="edu.harvard.med.screensaver.io.screens.NoOpStudyImageLocator">
  </bean>

  <bean
    id="plateFacilityIdInitializer"
    class="edu.harvard.med.screensaver.service.libraries.DefaultPlateFacilityIdInitializer">
  </bean>

  
  <!--  TODO: this needs to be moved back to spring-context-services.xml, once we have dependency issues worked out plate-reader-data-parser and core -->  
  <bean
    id="plateReaderRawDataTransformerService"
    class="edu.harvard.med.screensaver.service.screenresult.PlateReaderRawDataTransformer"
    scope="prototype">
    <constructor-arg ref="librariesDao"/>
  </bean>

  <!--  Top-level web application construction -->
  
  <import resource="classpath:spring-context-persistence.xml"/>
  <import resource="classpath:spring-context-services.xml"/>
  <import resource="classpath:spring-context-ui.xml"/>
  <!-- <import resource="classpath:spring-context-rest.xml"/>  -->
  <import resource="classpath:spring-context-authentication.xml"/>
  
</beans>
