<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:t="http://myfaces.apache.org/tomahawk"
  xmlns:s="http://myfaces.apache.org/sandbox"
  xmlns:ss="http://screensaver.med.harvard.edu/ui">

<ui:composition>

  <h:form id="cherryPickRequestViewerForm">
    <ss:collapsiblePanel id="cherryPickRequestDetails"
      isCollapsed="#{cherryPickRequestDetailViewer.isPanelCollapsedMap['cherryPickRequestDetails']}"
      label="Cherry Pick Request Details">
      <ui:define name="content">
        <ui:include src="cherryPickRequestDetailViewerBody.xhtml" />
      </ui:define>
    </ss:collapsiblePanel>
  </h:form>

  <h:form id="screenCherryPicksPanelForm">
    <ss:collapsiblePanel id="screenerCherryPicksPanel"
      isCollapsed="#{cherryPickRequestViewer.isPanelCollapsedMap['screenerCherryPicks']}"
      label="Screener Cherry Picks">
      <ui:define name="content">

        <t:outputText value="Cherry picks have not yet been specified."
          styleClass="label"
          rendered="#{cherryPickRequestViewer.screenerCherryPicksSearchResult.rowCount == 0}" />

        <t:panelGrid id="addCherryPicksAndHelpPanels" columns="2"
          columnClasses="column"
          rendered="#{cherryPickRequestViewer.screenerCherryPicksSearchResult.rowCount == 0}">
          <t:panelGrid id="addCherryPicksPanel" columns="1">
            <t:outputLabel for="cherryPicksInput"
              value="Specify cherry picks as plate/well pairs:"
              styleClass="label" />
            <t:inputTextarea id="cherryPicksInput" rows="30" cols="30"
              value="#{cherryPickRequestViewer.cherryPicksInput}"
              styleClass="inputText" />
            <t:commandButton id="addPoolCherryPicksCommand"
              value="Add Cherry Picks (Pool Wells)"
              action="#{cherryPickRequestViewer.addCherryPicksForPoolWells}"
              rendered="#{cherryPickRequestViewer.rnaiScreen}"
              styleClass="command"
              description="Add cherry picks, mapping from pool wells to duplex wells" />
            <t:commandButton id="addCherryPicksCommand"
              value="Add Cherry Picks"
              action="#{cherryPickRequestViewer.addCherryPicksForWells}"
              styleClass="command"
              description="Add cherry picks for the specified wells" />
          </t:panelGrid>
          <ui:include src="/help/libraries/wellFinderInputHelp.xhtml" />
        </t:panelGrid>

        <t:panelGrid id="viewScreenerCherryPicks" columns="1"
          rendered="#{cherryPickRequestViewer.screenerCherryPicksSearchResult.rowCount > 0}">

          <t:panelGroup id="screenerCherryPicksCommandPanel"
            styleClass="commandPanel"
            rendered="#{cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['cherryPickRequestsAdmin']}">
            <t:commandButton id="deleteCherryPicks" value="Delete All"
              action="#{cherryPickRequestDetailViewer.deleteAllCherryPicks}"
              disabled="#{cherryPickRequestViewer.entity.allocated}"
              styleClass="command"
              description="Delete all the screener cherry picks, so you can enter them again" />
          </t:panelGroup>

        </t:panelGrid>
      </ui:define>
    </ss:collapsiblePanel>
  </h:form>

  <!-- note: screenerCherryPickSearchResult must outside of above form, since searchResult has its own form -->
  <t:div
    rendered="#{! cherryPickRequestViewer.isPanelCollapsedMap['screenerCherryPicks'] &amp;&amp; cherryPickRequestViewer.screenerCherryPicksSearchResult.rowCount > 0}">
    <ss:searchResult
      searchResults="#{cherryPickRequestViewer.screenerCherryPicksSearchResult}" />
  </t:div>


  <h:form id="labCherryPicksPanelForm">

    <ss:collapsiblePanel id="labCherryPicksPanel"
      isCollapsed="#{cherryPickRequestViewer.isPanelCollapsedMap['labCherryPicks']}"
      label="Lab Cherry Picks">
      <ui:define name="content">
        <t:panelGrid columns="1">
          <t:outputText value="Cherry picks have not yet been specified"
            styleClass="label"
            rendered="#{cherryPickRequestViewer.labCherryPicksSearchResult.rowCount == 0}" />

          <t:panelGroup id="labCherryPicksCommandPanel"
            styleClass="commandPanel"
            rendered="#{cherryPickRequestViewer.labCherryPicksSearchResult.rowCount > 0}">
            <t:commandButton id="viewCherryPickRequestWellVolumes"
              value="View Well Volumes"
              rendered="#{cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['librariesAdmin']}"
              action="#{cherryPickRequestViewer.viewCherryPickRequestWellVolumes}"
              disabled="#{cherryPickRequestViewer.screenerCherryPicksSearchResult.rowCount == 0}"
              styleClass="command"
              title="View the available reagent volumes for the cherry picks on the cherry pick copy plates" />
            <t:commandButton
              id="viewCherryPickRequestWellVolumesForUnfulfilled"
              value="View Unfulfilled Well Volumes"
              rendered="#{cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['librariesAdmin']}"
              action="#{cherryPickRequestViewer.viewCherryPickRequestWellVolumesForUnfulfilled}"
              disabled="#{cherryPickRequestViewer.entity.numberUnfulfilledLabCherryPicks == 0}"
              styleClass="command"
              title="View the  available reagent volumes for the unfulfilled cherry picks on the cherry pick copy plates" />
            <t:commandButton id="allocateCherryPicks"
              value="Reserve reagent"
              action="#{cherryPickRequestViewer.allocateCherryPicks}"
              disabled="#{cherryPickRequestViewer.screenerCherryPicksSearchResult.rowCount == 0 || cherryPickRequestViewer.entity.allocated}"
              styleClass="command"
              title="Reserve reagent for the cherry picks from the cherry pick copy plates" />
            <t:commandButton id="deallocateCherryPicks"
              value="Cancel Reservation"
              action="#{cherryPickRequestViewer.deallocateCherryPicks}"
              disabled="#{!cherryPickRequestViewer.entity.allocated || cherryPickRequestViewer.entity.mapped}"
              styleClass="command"
              title="Cancel the reagent reservations from the cherry pick copy plates" />
            <t:commandButton id="plateMapCherryPicks"
              value="Map to Plates"
              action="#{cherryPickRequestViewer.plateMapCherryPicks}"
              disabled="#{!cherryPickRequestViewer.entity.allocated || cherryPickRequestViewer.entity.mapped}"
              onclick="#{cherryPickRequestViewer.unfulfilledPrompt}"
              styleClass="command"
              title="Choose plate number and destination well for the cherry picks" />
            <t:commandButton id="createCherryPickRequestForUnfulfilled"
              value="New Cherry Pick Request for Unfulfilled"
              disabled="#{!cherryPickRequestViewer.entity.allocated || cherryPickRequestViewer.entity.numberUnfulfilledLabCherryPicks == 0}"
              action="#{cherryPickRequestViewer.createNewCherryPickRequestForUnfulfilledCherryPicks}"
              styleClass="command"
              title="Create a new cherry pick request consisting of the unfulfilled cherry picks" />

          </t:panelGroup>
        </t:panelGrid>
      </ui:define>
    </ss:collapsiblePanel>
  </h:form>

  <!-- note: labCherryPickSearchResult must outside of above form, since searchResult has its own form -->
  <t:div
    rendered="#{! cherryPickRequestViewer.isPanelCollapsedMap['labCherryPicks'] &amp;&amp; cherryPickRequestViewer.labCherryPicksSearchResult.rowCount > 0}">
    <ss:searchResult
      searchResults="#{cherryPickRequestViewer.labCherryPicksSearchResult}">
      <ui:define name="searchResultFooter">
        <t:panelGrid rendered="#{searchResults.editMode}" columns="1">
          <t:panelGroup>
            <t:selectBooleanCheckbox
              id="recordOriginalSourceCopyWellsAsEmptyOption"
              value="#{searchResults.recordOriginalSourceCopyWellsAsEmpty}" />
            <t:outputLabel
              for="recordOriginalSourceCopyWellsAsEmptyOption"
              value="Record original source copy wells as empty"
              styleClass="label"
              title="For all edited source copy wells, mark the original source copy well as having empty volume" />
          </t:panelGroup>
          <t:outputLabel for="updateActivityComments"
            value="Comments for source copy updates:" styleClass="label"
            title="Comments associated with the lab cherry pick source copy updates" />
          <t:inputTextarea id="updateActivityComments" rows="3"
            cols="80"
            value="#{searchResults.labCherryPickSourceCopyUpdateComments}"
            styleClass="inputText" />
        </t:panelGrid>
      </ui:define>
    </ss:searchResult>
  </t:div>



  <h:form id="cherryPickPlatesForm">

    <ss:collapsiblePanel id="cherryPickPlatesPanel"
      isCollapsed="#{cherryPickRequestViewer.isPanelCollapsedMap['cherryPickPlates']}"
      label="Cherry Pick Plates">
      <ui:define name="content">
        <t:panelGrid columns="1">
          <t:outputText value="&lt;none&gt;" styleClass="label"
            rendered="#{!cherryPickRequestViewer.entity.mapped}" />

          <t:panelGroup styleClass="commandPanel"
            rendered="#{cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['cherryPickRequestsAdmin'] &amp;&amp; cherryPickRequestViewer.entity.mapped}">
            <t:commandButton id="downloadPlateMappingFiles"
              value="Download Files for Selected Plates"
              action="#{cherryPickRequestViewer.downloadPlateMappingFilesForSelectedAssayPlates}"
              disabled="#{!cherryPickRequestViewer.entity.mapped}"
              styleClass="command"
              title="Download the input files for the liquid transfer equipment" />
            <t:commandButton
              action="#{cherryPickReaderRawDataTransformer.viewCherryPickTransformer}"
              value="Transform Raw Data..." styleClass="command"
              rendered="#{cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['cherryPickRequestsAdmin'] &amp;&amp; cherryPickRequestViewer.entity.mapped}"
              title="Transform plate reader raw data into intermediate screen cherry pick result format" />
          </t:panelGroup>

<ui:remove> <!-- This is non-performant for large CPRs -->
          <t:outputText
            value="WARNING: Some cherry pick plates will be created from the same source plate!  Be aware that you will need to reload one or more source plates."
            rendered="#{cherryPickRequestViewer.sourcePlateReloadRequired}"
            styleClass="errorMessage" />
</ui:remove>

          <t:message for="assayPlatesTable" styleClass="errorMessage" />
          <t:dataTable id="assayPlatesTable" forceId="true" var="row"
            value="#{cherryPickRequestViewer.assayPlatesDataModel}"
            styleClass="standardTable" columnClasses="column"
            rowClasses="row1,row2" headerClass="tableHeader"
            rendered="#{cherryPickRequestViewer.entity.mapped}">
            <t:column>
              <f:facet name="header">
                <t:selectBooleanCheckbox id="selectAll"
                  value="#{cherryPickRequestViewer.selectAllAssayPlates}"
                  onclick="document.getElementById('selectAllAssayPlatesButton').click()" />
              </f:facet>
              <t:selectBooleanCheckbox value="#{row.selected}" />
            </t:column>
            <t:column>
              <f:facet name="header">Plate Number</f:facet>
              <t:outputText value="#{row.data.plateOrdinal + 1}" />
            </t:column>
            <t:column>
              <f:facet name="header">Attempt</f:facet>
              <t:outputText value="#{row.data.attemptOrdinal + 1}" />
            </t:column>
            <t:column>
              <f:facet name="header">Plate Name</f:facet>
              <t:outputText value="#{row.data.name}" />
            </t:column>
            <t:column>
              <f:facet name="header">Status</f:facet>
              <t:outputText value="#{row.data.statusLabel}" />
            </t:column>
            <t:column>
              <f:facet name="header">Plating Date</f:facet>
              <t:outputText
                value="#{row.data.cherryPickLiquidTransfer.dateOfActivity}" />
            </t:column>
            <t:column>
              <f:facet name="header">Plated By</f:facet>
              <t:outputText
                value="#{row.data.cherryPickLiquidTransfer.performedBy.fullNameLastFirst}" />
            </t:column>
            <t:column>
              <f:facet name="header">Plating Activity</f:facet>
              <!-- note: explicit ID is needed to differentiate from cherryPickScreeningActivityColumn ss:entityLink -->
              <ss:entityLink id="cherryPickLiquidTransferColumn"
                entity="#{row.data.cherryPickLiquidTransfer}"
                viewer="#{activityViewer}" />
            </t:column>
            <t:column>
              <f:facet name="header">Plating Comments</f:facet>
              <t:outputText
                value="#{row.data.cherryPickLiquidTransfer.comments}" />
            </t:column>
            <t:column>
              <f:facet name="header">Last Screening Date</f:facet>
              <t:outputText
                value="#{row.data.mostRecentCherryPickScreening.dateOfActivity}"
                rendered="#{!empty row.data.mostRecentCherryPickScreening}" />
            </t:column>
            <t:column>
              <f:facet name="header">Last Screened By</f:facet>
              <t:outputText
                value="#{row.data.mostRecentCherryPickScreening.performedBy.fullNameLastFirst}"
                rendered="#{!empty row.data.mostRecentCherryPickScreening}" />
            </t:column>
            <t:column>
              <f:facet name="header">Screening Activities</f:facet>
              <!-- note: explicit ID is needed to differentiate from cherryPickLiquidTransferColumn ss:entityLink -->
              <t:dataList id="cpScreeningsLinkList" var="cps"
                value="#{row.data.cherryPickScreenings}" layout="simple"
                rowIndexVar="eltIndex" rowCountVar="eltCount"
                styleClass="propertyValue dataText">
                <ss:entityLink id="cherryPickScreeningActivityColumn"
                  entity="#{cps}" viewer="#{activityViewer}" />
                <h:outputText value=", "
                  rendered="#{eltIndex &lt; eltCount - 1}" />
              </t:dataList>
            </t:column>

          </t:dataTable>

          <t:panelGrid id="createCherryPickLiquidTransferCommandPanel"
            columns="1" styleClass="commandPanel groupingPanel"
            rendered="#{cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['cherryPickRequestsAdmin'] || cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['screensAdmin'] &amp;&amp; cherryPickRequestViewer.entity.mapped}">

            <t:panelGroup>
              <t:outputText styleClass="label"
                value="Record selected plates as..." />
              <t:commandButton id="recordLiquidTransfer" value="Plated"
                action="#{cherryPickRequestViewer.recordSuccessfulCreationOfAssayPlates}"
                disabled="#{!cherryPickRequestViewer.entity.mapped || !cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['cherryPickRequestsAdmin']}"
                styleClass="command"
                title="Record successful reagent transfer" />
              <t:commandButton id="recordFailureOfAssayPlates"
                value="Failed"
                disabled="#{!cherryPickRequestViewer.entity.mapped || !cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['cherryPickRequestsAdmin']}"
                action="#{cherryPickRequestViewer.recordFailedCreationOfAssayPlates}"
                styleClass="command"
                title="Record unsuccessful reagent transfer" />
              <t:commandButton id="cancelAssayPlates" value="Canceled"
                disabled="#{!cherryPickRequestViewer.entity.mapped || !cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['cherryPickRequestsAdmin']}"
                action="#{cherryPickRequestViewer.deallocateCherryPicksByPlate}"
                styleClass="command"
                title="Canceling a plate will undo its reservation of reagent volumes." />
              <t:commandButton id="recordScreenedAssayPlates"
                value="Screened"
                disabled="#{!cherryPickRequestViewer.entity.mapped || !cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['screensAdmin']}"
                action="#{cherryPickRequestViewer.recordScreeningOfAssayPlates}"
                styleClass="command"
                title="Record that a successfully created assay plate has been screened." />
            </t:panelGroup>
          </t:panelGrid>

          <t:commandButton id="selectAllAssayPlatesButton"
            forceId="true"
            action="#{cherryPickRequestViewer.selectAllAssayPlates}"
            rendered="#{cherryPickRequestViewer.entity.mapped}"
            style="display:none" />

        </t:panelGrid>


        <div class="label">
          Update the status for a set of plates by selecting them,
          above, then click the appropriate action button (below). Note:
          <ul>
            <li>'Plated' indicates the cherry pick plate(s) were
              successfully plated and the requested reagent volume was
              removed from the library copy source plate(s).</li>
            <li>'Failed' indicates the cherry pick plate(s) could
              not be created due to a physical problem, but the
              requested reagent volume was removed from the library copy
              source plate(s). A new set of Lab Cherry Picks will be
              created for the next attempt at creating the cherry pick
              plate(s), reserving additional reagent volume from the
              library copy source plate(s).</li>
            <li>'Canceled' indicates that the creation of the
              cherry pick plate(s) was not attempted and will not be
              attempted. The requested reagent volume was not removed
              from the library copy source plate(s) and will be made
              available for use by other Cherry Pick Requests.</li>
            <li>'Screened' indicates that the cherry pick plate(s)
              were screened, which is only possible after they have been
              plated.</li>
          </ul>
        </div>
      </ui:define>
    </ss:collapsiblePanel>

  </h:form>

</ui:composition>

</html>

