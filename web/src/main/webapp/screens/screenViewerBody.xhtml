<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:t="http://myfaces.apache.org/tomahawk"
  xmlns:s="http://myfaces.apache.org/sandbox"
  xmlns:ss="http://screensaver.med.harvard.edu/ui">

<ui:composition>

  <t:panelGrid columns="1" width="100%"
    rendered="#{!empty screenViewer.entity}">
    <h:form id="screenDetailPanelForm">
      <ss:collapsiblePanel id="screenDetail"
        isCollapsed="#{screenDetailViewer.isPanelCollapsedMap['studyDetail']}"
        label="Screen">
        <ui:define name="closedContent">
          <f:subview id="screenSummary">
            <t:panelGrid id="propertiesPanel" columns="2"
              columnClasses="propertyLabelColumn,column"
              styleClass="layoutPanel">
              <ss:screenSummaryProperties
                screen="#{screenViewer.entity}" />
            </t:panelGrid>
          </f:subview>
        </ui:define>
        <ui:define name="content">
          <ui:include src="screenDetailViewerBody.xhtml" />
        </ui:define>
      </ss:collapsiblePanel>
    </h:form>

    <h:form>
      <ss:collapsiblePanel id="screeningSummaryPanel"
        isCollapsed="#{screenResultViewer.isPanelCollapsedMap['screeningSummary']}"
        label="Screening Summary"
        rendered="#{screenDetailViewer.allowedAccessToScreenDetails}">
        <ui:define name="content">

          <t:panelGrid columns="1">

            <t:panelGroup styleClass="commandPanel">
              <t:commandButton id="addLibraryScreeningCommand"
                value="Add Library Screening..."
                action="#{screenDetailViewer.addLibraryScreening}"
                rendered="#{screenDetailViewer.editable}"
                styleClass="command" />
              <t:commandButton
                action="#{screenResultImporter.importScreenResultData}"
                value="Load data" styleClass="command"
                rendered="#{screenViewer.screensaverUser.isUserInRoleOfNameMap['screenResultsAdmin']}"
                title="Load screen result data for this screen" />
              <t:commandButton action="#{screenResultViewer.delete}"
                value="Delete data"
                onclick="javascript: return confirm('Delete screen result data permanently?');"
                styleClass="command"
                rendered="#{! empty screenViewer.entity.screenResult &amp;&amp; screenViewer.screensaverUser.isUserInRoleOfNameMap['screenResultsAdmin']}"
                title="Delete the screen result data for this screen" />
            </t:panelGroup>

            <t:panelGrid id="screeningSummaryPropertiesPanel"
              columns="2" columnClasses="propertyLabelColumn,column"
              styleClass="layoutPanel">

              <ss:property id="screenResultLastImported"
                label="Last Data Loading Date" type="Date"
                description="The date the current screen results were loaded into the database"
                value="#{screenResultViewer.entity.lastDataLoadingActivity.dateCreated}" />

              <ss:property id="librariesScreened"
                rendered="#{screenViewer.entity.projectPhase != 'Follow Up Screen' &amp;&amp; appInfo.applicationProperties.facility != 'LINCS'}"
                label="Libraries Screened"
                description="The number of libraries that have been screened">
                <ui:define name="data">
                  <t:commandLink id="browseLibrariesScreened"
                    value="#{screenViewer.entity.librariesScreenedCount}"
                    action="#{screenViewer.browseLibrariesScreened}" />
                </ui:define>
              </ss:property>

              <ss:property id="libraryPlatesScreened"
                rendered="#{screenViewer.entity.projectPhase != 'Follow Up Screen' &amp;&amp; appInfo.applicationProperties.facility != 'LINCS'}"
                label="Library Plates Screened"
                description="The number of library plates that have been screened">
                <ui:define name="data">
                  <t:commandLink id="browseLibraryPlatesScreened"
                    value="#{screenViewer.entity.libraryPlatesScreenedCount}"
                    action="#{screenViewer.browseLibraryPlatesScreened}" />
                  <t:outputText
                    value="  (#{screenViewer.entity.assayPlatesScreenedCount} assay plates)"
                    styleClass="data" />
                </ui:define>
              </ss:property>

              <ss:property id="libraryPlatesDataLoaded"
                label="Library Plates Data Loaded"
                description="The number of library plates that have raw data loaded into the system"
                rendered="#{screenViewer.entity.projectPhase != 'Follow Up Screen'}">
                <ui:define name="data">
                  <t:commandLink id="browseLibraryPlatesDataLoaded"
                    value="#{screenViewer.entity.libraryPlatesDataLoadedCount}"
                    action="#{screenViewer.browseLibraryPlatesDataLoaded}" />
                </ui:define>
              </ss:property>

              <ss:property id="libraryPlatesDataAnalyzed"
                label="Library Plates Analyzed"
                value="#{screenViewer.entity.libraryPlatesDataAnalyzedCount}"
                description="The number of library plates that have been analyzed for positives" 
                rendered="#{screenViewer.entity.projectPhase != 'Follow Up Screen'}" />

              <ss:property id="screenedExperimentalWellCount"
                rendered="#{screenViewer.entity.projectPhase != 'Follow Up Screen' &amp;&amp; appInfo.applicationProperties.facility != 'LINCS'}"
                label="Experimental Wells Screened"
                value="#{screenViewer.entity.screenedExperimentalWellCount} (#{screenViewer.entity.uniqueScreenedExperimentalWellCount} unique)"
                description="The number of experimental library wells that have been screened, ignoring replicates">
              </ss:property>

              <ss:property id="loadedExperimentalWellCount"
                label="Experimental Wells Loaded (unique)"
                description="The number of unique experimental wells for which data have been loaded"
                value="#{screenResultViewer.entity.experimentalWellCount}" />

              <ss:property id="dataScreenedReplicateCount"
                rendered="#{screenViewer.entity.projectPhase != 'Follow Up Screen' &amp;&amp; appInfo.applicationProperties.facility != 'LINCS'}"
                label="Replicates Screened"
                description="The number of replicates that have been screened (min...max if replicate count varies across library plates)">
                <ui:define name="data">
                  <t:outputText
                    value="#{screenViewer.entity.minScreenedReplicateCount}#{empty screenViewer.entity.minScreenedReplicateCount || empty screenViewer.entity.minScreenedReplicateCount || screenViewer.entity.minScreenedReplicateCount == screenViewer.entity.maxScreenedReplicateCount ? '' : '...'}#{screenViewer.entity.minScreenedReplicateCount != screenViewer.entity.maxScreenedReplicateCount ? screenViewer.entity.maxScreenedReplicateCount : ''}"
                    styleClass="data" />
                </ui:define>
              </ss:property>

              <ss:property id="dataLoadedReplicateCount"
                rendered="#{screenViewer.entity.projectPhase != 'Follow Up Screen' &amp;&amp; appInfo.applicationProperties.facility != 'LINCS'}"
                label="Replicates Data Loaded"
                description="The number of replicates represented in the loaded screen result data (min...max if replicate count varies across library plates)">
                <ui:define name="data">
                  <t:outputText
                    value="#{screenViewer.entity.minDataLoadedReplicateCount}#{empty screenViewer.entity.minDataLoadedReplicateCount || empty screenViewer.entity.minDataLoadedReplicateCount || screenViewer.entity.minDataLoadedReplicateCount == screenViewer.entity.maxDataLoadedReplicateCount ? '' : '...'}#{screenViewer.entity.minDataLoadedReplicateCount != screenViewer.entity.maxDataLoadedReplicateCount ? screenViewer.entity.maxDataLoadedReplicateCount : ''}"
                    styleClass="data" />
                </ui:define>
              </ss:property>

              <ss:property id="assayReadoutTypes"
                label="Assay Readout Types"
                description="The assay readout types used"
                rendered="#{screenViewer.entity.projectPhase != 'Follow Up Screen'}">
                <ui:define name="data">
                  <t:outputText id="assayReadoutTypes"
                    value="#{screenResultViewer.assayReadoutTypesText}"
                    styleClass="dataText" />
                </ui:define>
              </ss:property>

              <ss:property id="positivesSummary"
                label="Positives Summary"
                description="Summary of positives"
                rendered="#{!empty screenResultViewer.entity &amp;&amp; appInfo.applicationProperties.facility != 'LINCS'}">
                <ui:define name="data">
                  <t:dataTable id="positivesSummaryTable"
                    var="dataColumn"
                    value="#{screenResultViewer.partitionedPositivesDataColumnsModel}"
                    preserveDataModel="false"
                    rendered="#{screenResultViewer.partitionedPositivesDataColumnsModel.rowCount > 0}"
                    styleClass="standardTable" rowClasses="row1,row2"
                    columnClasses="columnClasses"
                    headerClass="tableHeader">
                    <t:column>
                      <f:facet name="header">
                        <t:outputText value="Data Column" />
                      </f:facet>
                      <t:outputText value="#{dataColumn.name}" />
                    </t:column>
                    <t:column>
                      <f:facet name="header">
                        <t:outputText value="Total Positives" />
                      </f:facet>
                      <t:div
                        rendered="#{!empty dataColumn.positivesCount}">
                        <t:outputText
                          value="#{dataColumn.positivesCount} " />
                        (<t:outputText
                          value="#{dataColumn.positivesRatio}">
                          <f:convertNumber type="percent"
                            maxFractionDigits="2" minFractionDigits="1" />
                        </t:outputText>)
                      </t:div>
                    </t:column>
                    <t:column>
                      <f:facet name="header">
                        <t:outputText value="Strong Positives" />
                      </f:facet>
                      <t:div
                        rendered="#{dataColumn.partitionPositiveIndicator &amp;&amp; !empty dataColumn.strongPositivesCount}">
                        <t:outputText
                          value="#{dataColumn.strongPositivesCount} " />
                        (<t:outputText
                          value="#{dataColumn.strongPositivesRatio}">
                          <f:convertNumber type="percent"
                            maxFractionDigits="2" minFractionDigits="1" />
                        </t:outputText>)
                      </t:div>
                    </t:column>
                    <t:column>
                      <f:facet name="header">
                        <t:outputText value="Medium Positives" />
                      </f:facet>
                      <t:div
                        rendered="#{dataColumn.partitionPositiveIndicator &amp;&amp; !empty dataColumn.mediumPositivesCount}">
                        <t:outputText
                          value="#{dataColumn.mediumPositivesCount} " />
                        (<t:outputText
                          value="#{dataColumn.mediumPositivesRatio}">
                          <f:convertNumber type="percent"
                            maxFractionDigits="2" minFractionDigits="1" />
                        </t:outputText>)
                      </t:div>
                    </t:column>
                    <t:column>
                      <f:facet name="header">
                        <t:outputText value="Weak Positives" />
                      </f:facet>
                      <t:div
                        rendered="#{dataColumn.partitionPositiveIndicator &amp;&amp; !empty dataColumn.weakPositivesCount}">
                        <t:outputText
                          value="#{dataColumn.weakPositivesCount} " />
                        (<t:outputText
                          value="#{dataColumn.weakPositivesRatio}">
                          <f:convertNumber type="percent"
                            maxFractionDigits="2" minFractionDigits="1" />
                        </t:outputText>)
                      </t:div>
                    </t:column>
                  </t:dataTable>
                </ui:define>
              </ss:property>

            </t:panelGrid>
          </t:panelGrid>
        </ui:define>
      </ss:collapsiblePanel>
    </h:form>

    <ui:include src="screenresults/screenResultData.xhtml" />

  </t:panelGrid>

</ui:composition>

</html>

