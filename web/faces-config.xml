<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE faces-config PUBLIC "-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.1//EN" "http://java.sun.com/dtd/web-facesconfig_1_1.dtd">
<faces-config>

  <application>

    <!-- Spring/JSF integration uses DelegatingVariableResolver to allow JSF to access Spring beans as if they were JSF managed beans -->
    <variable-resolver>org.springframework.web.jsf.DelegatingVariableResolver</variable-resolver>

    <locale-config>
      <default-locale>en</default-locale>
      <supported-locale>en</supported-locale>
    </locale-config>
    
    <!-- user interface text messages -->
    <message-bundle>org.springframework.context.support.ReloadableResourcebundleMessagesource</message-bundle>
  </application>
  

  <!-- Managed beans -->
  
  <!-- TODO: Is it possible to configure managed-bean superclass so that common properties are not repeated in each bean definition?  Or must we use Spring to manage our JSF managed-beans in order have such a feature? -->
  
  <managed-bean>
    <description>
      Backing bean for the reportException.jsp view, enabling exception stack traces to be viewed in
      a custom manner.
    </description>
    <managed-bean-name>exceptionReporter</managed-bean-name>
    <managed-bean-class>
      edu.harvard.med.screensaver.ui.ExceptionReporterController
    </managed-bean-class>            
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>
  
  <managed-bean>
    <description>Main</description>
    <managed-bean-name>main</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.MainController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <property-name>dao</property-name>
      <value>#{dao}</value>
    </managed-property>
    <managed-property>
      <property-name>libraryController</property-name>
      <value>#{library}</value>
    </managed-property>
    <managed-property>
      <property-name>messages</property-name>
      <value>#{messages}</value>
    </managed-property>
    <managed-property>
      <property-name>screenResultViewerController</property-name>
      <value>#{screenResultViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>screenResultParser</property-name>
      <value>#{screenResultParser}</value>
    </managed-property>
   </managed-bean>

  <managed-bean>
    <description>Edit Library form backing bean</description>
    <managed-bean-name>library</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.LibraryController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <property-name>dao</property-name>
      <value>#{dao}</value>
    </managed-property>
    <managed-property>
      <property-name>messages</property-name>
      <value>#{messages}</value>
    </managed-property>
  </managed-bean>
  
  <managed-bean>
    <description>Screen Result Viewer backing bean</description>
    <managed-bean-name>screenResultViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.ScreenResultViewerController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <property-name>screenResultExporter</property-name>
      <value>#{screenResultExporter}</value>
    </managed-property>
    <managed-property>
      <property-name>heatMapViewer</property-name>
      <value>#{heatMapViewer}</value>
    </managed-property>
    <!-- managed-property>
      <property-name>dao</property-name>
      <value>#{dao}</value>
    </managed-property>
    <managed-property>
      <property-name>messages</property-name>
      <value>#{messages}</value>
    </managed-property-->
  </managed-bean>
  
  <managed-bean>
    <description>Heat Map Viewer backing bean</description>
    <managed-bean-name>heatMapViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.HeatMapViewerController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <property-name>messages</property-name>
      <value>#{messages}</value>
    </managed-property>
  </managed-bean>
  
  <managed-bean>
    <description>Well viewer backing bean</description>
    <managed-bean-name>wellViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.WellViewerController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
  
  <managed-bean>
    <description>Screen Result Importer backing bean</description>
    <managed-bean-name>screenResultImporter</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.ScreenResultImporterController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <property-name>screenResultViewer</property-name>
      <value>#{screenResultViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>screenResultParser</property-name>
      <value>#{screenResultParser}</value>
    </managed-property>
    <managed-property>
      <property-name>messages</property-name>
      <value>#{messages}</value>
    </managed-property>
  </managed-bean>
  
  <managed-bean>
    <description>Query</description>
    <managed-bean-name>query</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.QueryController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Menu navigation panel</description>
    <managed-bean-name>menu</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.MenuController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  
  <!-- Navigation rules -->
  
  <!-- lastly, define the navigation rules that are applicable from *all* views (e.g. those that contain a navigation panel) -->
  <navigation-rule>
    <from-view-id>*</from-view-id>
    <navigation-case>
      <from-outcome>goImportScreenResult</from-outcome>
      <to-view-id>/screenResultImporter.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>

  <navigation-rule>
    <from-view-id>/main.jsp</from-view-id>
    <navigation-case>
      <from-action>#{main.createLibrary}</from-action>
      <from-outcome>success</from-outcome>
      <to-view-id>/library.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-action>#{main.viewSample1ScreenResult}</from-action>
      <from-outcome>success</from-outcome>
      <to-view-id>/screenResultViewer.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-action>#{main.viewSample2ScreenResult}</from-action>
      <from-outcome>success</from-outcome>
      <to-view-id>/screenResultViewer.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-action>#{main.findLibrary}</from-action>
      <from-outcome>found</from-outcome>
      <to-view-id>/library.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-action>#{main.findLibrary}</from-action>
      <from-outcome>found many</from-outcome>
      <!--  TODO to-view-id>/libraries.jsp</to-view-id-->
      <to-view-id>/main.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-action>#{screenResultImporter.submit}</from-action>
      <from-outcome>success</from-outcome>
      <to-view-id>/screenResultViewer.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-action>#{screenResultImporter.submit}</from-action>
      <from-outcome>screenresult-parse-errors</from-outcome>
      <to-view-id>/screenResultImporter.jsp</to-view-id>
      <redirect/>
    </navigation-case>
  </navigation-rule>
  
  <navigation-rule>
    <from-view-id>/screenResultImporter.jsp</from-view-id>
    <navigation-case>
      <from-action>#{screenResultImporter.done}</from-action>
      <to-view-id>/main.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-action>#{screenResultImporter.submit}</from-action>
      <from-outcome>success</from-outcome>
      <to-view-id>/screenResultViewer.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-action>#{screenResultImporter.submit}</from-action>
      <from-outcome>screen-result-parse-errors</from-outcome>
      <to-view-id>/screenResultImporter.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>

  <navigation-rule>
    <from-view-id>/library.jsp</from-view-id>
    <navigation-case>
      <from-outcome>cancel</from-outcome>
      <to-view-id>/main.jsp</to-view-id>
      <redirect /> 
    </navigation-case>
    <navigation-case>
      <!--from-action>...</from-action-->            
      <from-outcome>done</from-outcome>
      <to-view-id>/main.jsp</to-view-id>
      <redirect /> 
    </navigation-case>
    <navigation-case>
      <from-outcome>revert</from-outcome>
      <to-view-id>/library.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>
  
  <navigation-rule>
    <from-view-id>/screenResultViewer.jsp</from-view-id>
    <navigation-case>
      <from-outcome>done</from-outcome>
      <to-view-id>/main.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>showWell</from-outcome>
      <to-view-id>/well.jsp</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>viewHeatMaps</from-outcome>
      <to-view-id>/heatMapViewer.jsp</to-view-id>
      <redirect/>
    </navigation-case>
  </navigation-rule>
  
  <navigation-rule>
    <from-view-id>/well.jsp</from-view-id>
    <navigation-case>
      <to-view-id>/main.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>

  <navigation-rule>
    <from-view-id>/heatMapViewer.jsp</from-view-id>
    <navigation-case>
      <from-outcome>done</from-outcome>
      <to-view-id>/screenResultViewer.jsp</to-view-id>
      <redirect/>
    </navigation-case>
  </navigation-rule>
  

  <!-- Converters -->

  <converter>
    <description>Converter for LibraryType enum to/from string representation</description>
    <converter-id>LibraryTypeConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.LibraryTypeConverter</converter-class>
  </converter>
  
  <converter>
    <description>Converter for UISelect{One/Many} components (SelectItem elements)</description>
    <converter-id>PlateNumberSelectItemConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.PlateNumberSelectItemConverter</converter-class>
  </converter>

  
  <!-- Validators -->

  
</faces-config>
