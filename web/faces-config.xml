<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE faces-config PUBLIC "-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.1//EN" "http://java.sun.com/dtd/web-facesconfig_1_1.dtd">
<faces-config>

  <application>

    <!-- Spring/JSF integration uses DelegatingVariableResolver to allow JSF to access Spring beans as if they were JSF managed beans -->
    <variable-resolver>org.springframework.web.jsf.DelegatingVariableResolver</variable-resolver>

    <locale-config>
      <default-locale>en</default-locale>
      <supported-locale>en</supported-locale>
    </locale-config>
    
    <!-- user interface text messages -->
    <message-bundle>org.springframework.context.support.ReloadableResourcebundleMessagesource</message-bundle>

    <!-- Tiles support.  This ViewHandler takes requests for *.jsp JSF views and processes them with their 
         corresponding *.tiles definition (found in /WEB-INF/tiles.xml, or whatever the 'tiles-definition' 
         context param defines in web.xml) -->
    <view-handler>org.apache.myfaces.tomahawk.application.jsp.JspTilesViewHandlerImpl</view-handler>

  </application>
  
  
  <!-- === === Phase Listeners === === -->
  
  <lifecycle>
    <phase-listener>edu.harvard.med.screensaver.ui.util.Messages</phase-listener>
  </lifecycle>


  <!-- === === Managed beans === === -->
  
  <!-- TODO: Is it possible to configure managed-bean superclass so that common properties are not repeated in each bean definition?  Or must we use Spring to manage our JSF managed-beans in order have such a feature? -->


  <!-- === top-level backing beans === -->
  
  <managed-bean>
    <description>Main Controller</description>
    <managed-bean-name>mainController</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.control.MainController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
  
  <managed-bean>
    <description>Menu navigation panel</description>
    <managed-bean-name>menu</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.Menu</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Login form backing bean</description>
    <managed-bean-name>login</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.Login</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <!-- Inject the transactionalDao bean, rather than the dao bean (aliased to the restrictedAccessDao bean), in order to avoid infinite recursion from Login.getScreensaverUser() -->
      <property-name>dao</property-name>
      <value>#{transactionalDao}</value>
    </managed-property>
    <managed-property>
      <property-name>messages</property-name>
      <value>#{messages}</value>
    </managed-property>
  </managed-bean>
  
  <managed-bean>
    <description>
      Backing bean for the reportException view, enabling exception stack traces to be viewed in
      a custom manner.
    </description>
    <managed-bean-name>exceptionReporter</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.ExceptionReporter</managed-bean-class>            
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Schema Manager</description>
    <managed-bean-name>schemaManager</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.SchemaManager</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
	<managed-property>
      <property-name>schemaUtil</property-name>
      <value>#{schemaUtil}</value>
    </managed-property>
    <managed-property>
      <property-name>screenDBDataImporter</property-name>
      <value>#{screenDBDataImporter}</value>
    </managed-property>
  </managed-bean>

  <managed-bean>
    <description>Hibernate Session Test</description>
    <managed-bean-name>hibernateSessionTest</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.HibernateSessionTest</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <property-name>dao</property-name>
      <value>#{dao}</value>
    </managed-property>
    <managed-property>
      <property-name>hibernateTemplate</property-name>
      <value>#{hibernateTemplate}</value>
    </managed-property>
  </managed-bean>


  <!-- === libraries backing beans === -->
   
  <managed-bean>
    <description>Libraries Controller Bean</description>
    <managed-bean-name>librariesController</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.control.LibrariesController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <property-name>dao</property-name>
      <value>#{dao}</value>
    </managed-property>
    <managed-property>
      <property-name>messages</property-name>
      <value>#{messages}</value>
    </managed-property>
    <managed-property>
      <property-name>wellFinder</property-name>
      <value>#{wellFinder}</value>
    </managed-property>
    <managed-property>
      <property-name>librariesBrowser</property-name>
      <value>#{librariesBrowser}</value>
    </managed-property>
    <managed-property>
      <property-name>libraryViewer</property-name>
      <value>#{libraryViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>wellSearchResultsViewer</property-name>
      <value>#{wellSearchResultsViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>wellViewer</property-name>
      <value>#{wellViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>geneViewer</property-name>
      <value>#{geneViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>compoundViewer</property-name>
      <value>#{compoundViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>compoundLibraryContentsImporter</property-name>
      <value>#{compoundLibraryContentsImporter}</value>
    </managed-property>
    <managed-property>
      <property-name>compoundLibraryContentsParser</property-name>
      <value>#{compoundLibraryContentsParser}</value>
    </managed-property>
    <managed-property>
      <property-name>rnaiLibraryContentsImporter</property-name>
      <value>#{rnaiLibraryContentsImporter}</value>
    </managed-property>
    <managed-property>
      <property-name>rnaiLibraryContentsParser</property-name>
      <value>#{rnaiLibraryContentsParser}</value>
    </managed-property>
  </managed-bean>

  <managed-bean>
    <description>Well Finder</description>
    <managed-bean-name>wellFinder</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.WellFinder</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Libraries Browser</description>
    <managed-bean-name>librariesBrowser</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.LibrariesBrowser</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
  
  <managed-bean>
    <description>Library Viewer</description>
    <managed-bean-name>libraryViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.LibraryViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Well Search Results Viewer</description>
    <managed-bean-name>wellSearchResultsViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.WellSearchResultsViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Well Viewer</description>
    <managed-bean-name>wellViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.WellViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Gene Viewer</description>
    <managed-bean-name>geneViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.GeneViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
  
  <managed-bean>
    <description>Compound Viewer</description>
    <managed-bean-name>compoundViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.CompoundViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Compound Library Contents Importer</description>
    <managed-bean-name>compoundLibraryContentsImporter</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.CompoundLibraryContentsImporter</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
   
  <managed-bean>
    <description>RNAi Library Contents Importer backing bean</description>
    <managed-bean-name>rnaiLibraryContentsImporter</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.libraries.RNAiLibraryContentsImporter</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  
  <!-- === screens backing beans === -->

  <managed-bean>
    <description>Screens Controller</description>
    <managed-bean-name>screensController</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.control.ScreensController</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
    <managed-property>
      <property-name>dao</property-name>
      <value>#{dao}</value>
    </managed-property>
    <managed-property>
      <property-name>messages</property-name>
      <value>#{messages}</value>
    </managed-property>
    <managed-property>
      <property-name>librariesController</property-name>
      <value>#{librariesController}</value>
    </managed-property>
    <managed-property>
      <property-name>screensBrowser</property-name>
      <value>#{screensBrowser}</value>
    </managed-property>
    <managed-property>
      <property-name>screenViewer</property-name>
      <value>#{screenViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>screenResultViewer</property-name>
      <value>#{screenResultViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>screenFinder</property-name>
      <value>#{screenFinder}</value>
    </managed-property>
    <managed-property>
      <property-name>heatMapViewer</property-name>
      <value>#{heatMapViewer}</value>
    </managed-property>
    <managed-property>
      <property-name>screenResultImporter</property-name>
      <value>#{screenResultImporter}</value>
    </managed-property>
    <managed-property>
      <property-name>screenResultExporter</property-name>
      <value>#{screenResultExporter}</value>
    </managed-property>
  </managed-bean>
  
  <managed-bean>
    <description>Screens Browser</description>
    <managed-bean-name>screensBrowser</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.screens.ScreensBrowser</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Screen Viewer</description>
    <managed-bean-name>screenViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.screens.ScreenViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
  
  <managed-bean>
    <description>Screen Result Viewer</description>
    <managed-bean-name>screenResultViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.screenresults.ScreenResultViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Screen Finder</description>
    <managed-bean-name>screenFinder</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.screens.ScreenFinder</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>


  <!-- === screen results backing beans === -->
  
  <managed-bean>
    <description>Screen Result Viewer</description>
    <managed-bean-name>screenResultViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.screenresults.ScreenResultViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
  
  <managed-bean>
    <description>Heat Map Viewer</description>
    <managed-bean-name>heatMapViewer</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.screenresults.HeatMapViewer</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>Screen Result Importer</description>
    <managed-bean-name>screenResultImporter</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.ui.screenresults.ScreenResultImporter</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
  
  <managed-bean>
    <description>Screen Result Exporter</description>
    <managed-bean-name>screenResultExporter</managed-bean-name>
    <managed-bean-class>edu.harvard.med.screensaver.io.screenresults.ScreenResultExporter</managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>
 
  
  <!-- Navigation rules -->
  
  <!-- Note: By convention we use "success" and "error" action outcome strings to denote generic 
       outcomes.  Feel free to use others, as needed, but add them to the ScreenResultConstants 
       class, please! 
  -->

  <!-- Note: We are able to leave off the extension for the view defined in each <to-view-id>, 
       since Tiles accepts and handles missing extensions.  This is kind of nice. Unfortunately, 
       the <from-view-id> views require a ".jsp" extension, although intuitively one would like 
       to use ".jsf".
  -->
  
  <!-- define navigation rules that are applicable from *all* views (e.g. those that contain a navigation panel) -->
  <navigation-rule>
    <from-view-id>*</from-view-id>

    <!-- === top-level wildcard navigation rules === -->
    <navigation-case>
      <from-outcome>viewHelp</from-outcome>
      <to-view-id>/helpViewer</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>viewDownloads</from-outcome>
      <to-view-id>/downloadsViewer</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>logout</from-outcome>
      <!-- maybe we want a "you have been logged out" page; for now we send to the query page, which will force a login -->
      <to-view-id>/main</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>goEnvironmentInfo</from-outcome>
      <to-view-id>/dev/env</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>goSchemaManager</from-outcome>
      <to-view-id>/dev/schemaManager</to-view-id>
      <redirect/>
    </navigation-case>
    
    <!-- === libraries wildcard navigation rules === -->
    <navigation-case>
      <from-outcome>findWells</from-outcome>
      <to-view-id>/libraries/wellFinder</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>browseLibraries</from-outcome>
      <to-view-id>/libraries/librariesBrowser</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>viewLibrary</from-outcome>
      <to-view-id>/libraries/libraryViewer</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>viewWellSearchResults</from-outcome>
      <to-view-id>/libraries/wellSearchResults</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>viewWell</from-outcome>
      <to-view-id>/libraries/wellViewer</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>viewGene</from-outcome>
      <to-view-id>/libraries/geneViewer</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>viewCompound</from-outcome>
      <to-view-id>/libraries/compoundViewer</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>importCompoundLibraryContents</from-outcome>
      <to-view-id>/libraries/admin/compoundLibraryContentsImporter</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>importRNAiLibraryContents</from-outcome>
      <to-view-id>/libraries/admin/rnaiLibraryContentsImporter</to-view-id>
      <redirect/>
    </navigation-case>
    
    <!-- === screens wildcard navigation rules === -->    
    <navigation-case>
      <from-outcome>browseScreens</from-outcome>
      <to-view-id>/screens/screensBrowser</to-view-id>
      <redirect/>
    </navigation-case>
    <navigation-case>
      <from-outcome>viewScreen</from-outcome>
      <to-view-id>/screens/screenAndResultViewer</to-view-id>
      <redirect/>
    </navigation-case>

    <!-- === screenresults wildcard navigation rules === --> 
    <navigation-case>
      <from-outcome>viewScreenResultImportErrors</from-outcome>
      <to-view-id>/screens/screenresults/admin/screenResultImporter</to-view-id>
      <redirect/>
    </navigation-case>   

  </navigation-rule>
  

  <!-- === === Converters === === -->

  <converter>
    <description>Converter for LibraryType enum to/from string representation</description>
    <converter-id>LibraryTypeConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.LibraryTypeConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>ScreenTypeConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.ScreenTypeConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>SilencingReagentTypeConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.SilencingReagentTypeConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>ScreeningRoomUserConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.ScreeningRoomUserConverter</converter-class>
    <!-- property>
     <property-name>dao</property-name>
     <property-class>edu.harvard.med.screensaver.db.DAO</property-class>
     <default-value>#{dao}</default-value>
    </property-->
  </converter>
  
  <converter>
    <converter-id>SortDirectionConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.SortDirectionConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>StatusValueConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.StatusValueConverter</converter-class>
  </converter>

  <converter>
    <converter-id>VisitTypeConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.VisitTypeConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>AssayReadoutTypeConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.AssayReadoutTypeConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>FundingSupportConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.FundingSupportConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>ResultValueTypeConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.ResultValueTypeConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>ScoringTypeConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.ScoringTypeConverter</converter-class>
  </converter>
  
  <converter>
    <converter-id>IntegerConverter</converter-id>
    <converter-class>edu.harvard.med.screensaver.ui.util.IntegerConverter</converter-class>
  </converter>


  <!-- === === Validators === === -->

  <validator>
   <validator-id>YearValidator</validator-id>
   <validator-class>javax.faces.validator.LongRangeValidator</validator-class>
   <property>
    <property-name>maximum</property-name>
    <property-class>java.lang.Long</property-class>
    <default-value>2020</default-value>
    </property>
   <property>
    <property-name>minimum</property-name>
    <property-class>java.lang.Long</property-class>
    <default-value>1970</default-value>
    </property>
  </validator>

</faces-config>
