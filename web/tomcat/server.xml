<!--
   $HeadURL:$
   $Id:$

   Copyright 2006 by the President and Fellows of Harvard College.

   Screensaver is an open-source project developed by the ICCB-L and NSRB labs
   at Harvard Medical School. This software is distributed under the terms of
   the GNU General Public License.
-->

<Server port="8077" shutdown="c51b1597e4cc1541289e7177d5a54e8c" debug="0">

  <GlobalNamingResources>

    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users -->
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
       description="User database that can be updated and saved">
    </Resource>
    <ResourceParams name="UserDatabase">
      <parameter>
        <name>factory</name>
        <value>org.apache.catalina.users.MemoryUserDatabaseFactory</value>
      </parameter>
      <parameter>
        <name>pathname</name>
        <value>conf/tomcat-users.xml</value>
      </parameter>
    </ResourceParams>

  </GlobalNamingResources>

  <Service name="Catalina">

    <Connector port="8078" address="127.0.0.1"
               enableLookups="false" debug="0" protocol="AJP/1.3" />

    <Engine name="Catalina" defaultHost="localhost" debug="0">

      <Logger className="org.apache.catalina.logger.FileLogger"
              prefix="catalina_log." suffix=".txt"
              timestamp="true"/>

      <!-- This Realm is for the Screensaver application and uses JAAS. 
           Also see login.config file to see how the 'Screensaver1' login module (referenced here) is configured. 
           The 'useContextClassLoader=false' setting is critical, as it allows our JAASRealm-related classes 
           to be accessed by the web app's classloader, instead of Tomcat's higher-level 'common' classloader,
           which would otherwise cause us to deploy our classes in different places (which we're not allowed to do
           on an orchestra deployment.
           -->
      <Realm 
        className="org.apache.catalina.realm.JAASRealm"                 
        appName="Screensaver1"
        userClassNames="edu.harvard.med.screensaver.model.users.ScreensaverUser"
        roleClassNames="edu.harvard.med.screensaver.model.users.ScreensaverUserRole"
        debug="99"
        useContextClassLoader="false"
        />


      <!--Realm className="org.apache.catalina.realm.UserDatabaseRealm"
                 debug="0" resourceName="UserDatabase"/-->

      <Host name="screensaver1.med.harvard.edu" debug="0"
       appBase="/www/screensaver1.med.harvard.edu/docroot"
       unpackWARs="true" autoDeploy="true"
       xmlValidation="false" xmlNamespaceAware="false">

        <!-- Context definition for our Screensaver web application.  We end up having to define this Context explicitly because we have to define our JNDI resources inside of it. -->
        <Context
          path="/screensaver"
          docBase="screensaver"
          debug="99">
          
          <!-- Define a LoginModuleFactoryCapsule JNDI resource. Tomcat will instantiate this bean and register it in its JNDI directory. -->
          <Resource
            name="bean/loginModuleFactoryCapsule"
            auth="Container"
            type="edu.harvard.med.screensaver.ui.authentication.tomcat.LoginModuleFactoryCapsule">
          </Resource>
          <ResourceParams name="bean/loginModuleFactoryCapsule">
            <parameter>
              <name>factory</name>
              <value>org.apache.naming.factory.BeanFactory</value>
            </parameter>
          </ResourceParams>

        </Context>

      </Host>

    </Engine>

  </Service>

</Server>
