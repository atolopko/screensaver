<?xml version="1.0" encoding="UTF-8"?>
<!--
  $HeadURL$
  $Id$

  Copyright Â© 2006 by the President and Fellows of Harvard College.

  Screensaver is an open-source project developed by the ICCB-L and NSRB labs
  at Harvard Medical School. This software is distributed under the terms of
  the GNU General Public License.
-->

<project
  name="Screensaver"
  default="deploy"
  basedir="."
>
  <description>
    A build.xml for Screensaver 1.xx
  </description>
	
	<!-- properties -->
	
	<property name="war" value="build/screensaver.war"/>
	<property name="deploy.dir" value="/usr/local/jakarta-tomcat/webapps/"/>
	<property name="war.build.dir" location="build/war/"/>
	

	<!-- patterns sets -->
	
  <fileset
  	dir="lib" 
  	id="lib.used"
  >
    <include name="**/*.jar"/>
    <exclude name="**/unused/**"/>
  </fileset>


	<!-- classpaths -->
    
  <path id="project.classpath">
  	<fileset refid="lib.used"/>
  </path>

  <path id="ddl.classpath">
    <path refid="project.classpath"/>
    <pathelement path="resources"/>
  </path>


	<!-- build and deploy -->
  
  <target
  	name="deploy"
  	depends="compile"
  >
    <description>
      Deploy Screensaver to the application server.
      Currently unimplemented.
    </description>
		<antcall target="exploded.war">
  		<param name="exploded.war.dir" location="${deploy.dir}"/>
		</antcall>
 	</target>

  <target
  	name="war"
  	depends="compile"
  >
    <description>
      Build Screensaver into a Web ARchive file.
    </description>
		<antcall target="exploded.war">
  		<param name="exploded.war.dir" location="${war.build.dir}"/>
		</antcall>
    <jar
	    destfile="${war}"
    	basedir="${war.build.dir}"
  	/>
  </target>
  
 	<target name="exploded.war">
    <description>
      Generate exploded Web ARchive directory structure for the Screensaver web application.
    	Used to 1) create a WAR file, and 2) deploy exploded WAR file to application server.
    </description>
  	<mkdir dir="${exploded.war.dir}/WEB-INF"/>
  	<mkdir dir="${exploded.war.dir}/META-INF"/>
  	<copy file="web/web.xml" todir="${exploded.war.dir}/WEB-INF"/>
  	<!-- TODO: upper case "manifest.mf" file name -->
  	<copy file="web/manifest.mf" todir="${exploded.war.dir}/META-INF"/>
  	<copy todir="${exploded.war.dir}/WEB-INF/jsp">
  		<fileset dir="jsp"/>
		</copy>	
  	<copy todir="${exploded.war.dir}/WEB-INF/classes">
  		<fileset dir="classes"/>
  		<fileset dir="resources"/>
		</copy>	
  	<copy
  		todir="${exploded.war.dir}/WEB-INF/lib"
  		flatten="true">
  		<fileset refid="lib.used"/>
		</copy>	
  	<copy todir="${exploded.war.dir}/WEB-INF/taglib">
  		<fileset dir="web/taglib"/>
		</copy>	
  </target>

 	<target
    name="compile"
    depends="hbm_xml"
    description="Compiles Java source code"
  >
    <javac
      srcdir="src"
      destdir="build/jar"
      classpathref="project.classpath"
    />
    <!--jar
      destfile="build/screensaver.jar"
      basedir="build/jar"
    /-->
  </target>
  
  <target
    name="hbm_xml"
    description="Generate hibernate.cfg.xml and .hbm.xml files"
  >
	  <taskdef
	    name="hibernatedoclet"
	    classname="xdoclet.modules.hibernate.HibernateDocletTask"
	    classpathref="project.classpath"
	  />
    <hibernatedoclet
      destdir="resources"
      excludedtags="@version,@author,@todo"
    >
      <fileset dir="src" casesensitive="yes">
        <include name="edu/harvard/med/screensaver/beans/**/*.java"/>
      </fileset>      
      <hibernatecfg
        version="3.0" 
        showsql="true"
        driver="org.postgresql.Driver"
        jdbcurl="jdbc:postgresql://localhost/screensaver"
        username="screensaver"
        password="screensaver"
        dialect="org.hibernate.dialect.PostgreSQLDialect"
      />
      <hibernate version="3.0" destinationFile="{0}.hbm.xml"/>
    </hibernatedoclet>
  </target>


  <!-- generate ddl -->
	
  <target name="ddl" depends="hbm_xml">
    <description>
      Generate the DDL from the beans classes and associated hbm.xml files
    </description>
    <taskdef
      name="hibernatetool" 
      classname="org.hibernate.tool.ant.HibernateToolTask" 
      classpathref="ddl.classpath"
    />
    <hibernatetool destdir="sql">
      <configuration
   	    configurationfile="resources/hibernate.cfg.xml"
        namingstrategy="org.hibernate.cfg.ImprovedNamingStrategy"
      />
      <hbm2ddl
        export="false"
        format="true"
        outputfilename="create_schema.sql"
      />
      <hbm2ddl
        create="false"
        drop="true"
        export="false"
        format="true"
        outputfilename="drop_schema.sql"
      />
    </hibernatetool>
  </target>

  
  <!-- cleanup routines -->
  
  <target name="clean" description="Clean out generated files.">
    <delete includeemptydirs="true">
      <fileset dir="build/jar" includes="**/*"/>
      <fileset dir="resources" includes="edu/**"/>
      <fileset dir="sql"       includes="create_database.sql"/>
      <fileset dir="sql"       includes="drop_database.sql"/>
      <fileset dir="build"     includes="**/*"/>
    </delete>
  </target>
  
</project>
