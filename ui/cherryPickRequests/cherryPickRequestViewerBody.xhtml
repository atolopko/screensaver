<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:s="http://myfaces.apache.org/sandbox"
	xmlns:ss="http://screensaver.med.harvard.edu/ui">

<ui:composition>

	<h:form id="cherryPickRequestViewerForm">

		<ss:collapsiblePanel id="cherryPickRequestDetails"
			isCollapsed="#{cherryPickRequestViewer.isPanelCollapsedMap['cherryPickRequest']}"
			label="Cherry Pick Request Details">

			<ui:define name="content">
				<t:panelGrid columns="1">
					<t:panelGroup id="cherryPickRequestCommandPanel"
						styleClass="commandPanel">
						<t:panelGroup id="adminCommandPanel"
							rendered="#{cherryPickRequestViewer.editable}">
							<t:commandButton id="editCommand" value="Edit"
								action="#{cherryPickRequestViewer.edit}"
								styleClass="command"
								rendered="#{!cherryPickRequestViewer.editMode}"
								title="Enter edit mode for the cherry pick request" />
							<t:commandButton id="deleteCommand" value="Delete"
								action="#{cherryPickRequestViewer.deleteCherryPickRequest}"
								onclick="javascript: return confirm('Delete this cherry pick request and all of its cherry picks permanently?');"
								styleClass="command"
								rendered="#{cherryPickRequestViewer.editable &amp;&amp; !cherryPickRequestViewer.editMode}"
								disabled="#{cherryPickRequestViewer.cherryPickRequest.allocated || (cherryPickRequestViewer.rnaiScreen &amp;&amp; cherryPickRequestViewer.cherryPickRequest.screened)}"
								title="Delete this cherry pick request" />
							<t:commandButton id="saveCommand" value="Save"
								action="#{cherryPickRequestViewer.save}" styleClass="command"
								rendered="#{cherryPickRequestViewer.editMode}"
								title="Save your changes and leave edit mode" />
							<t:commandButton id="cancelEditCommand" value="Cancel"
								rendered="#{cherryPickRequestViewer.editMode}"
								action="#{cherryPickRequestViewer.cancel}" immediate="true"
								styleClass="command"
								title="Discard your changes and leave edit mode" />
						</t:panelGroup>
						<t:commandButton id="downloadCherryPickRequestCommand"
							value="Download"
							action="#{cherryPickRequestViewer.downloadCherryPickRequest}"
							disabled="#{cherryPickRequestViewer.screenerCherryPickCount == 0}"
							styleClass="command"
							title="Download the cherry pick request to a file" />
					</t:panelGroup>

					<t:panelGrid id="cherryPickRequestInfoTable" columns="2"
						styleClass="layoutPanel"
						columnClasses="propertyLabelColumn,column">

						<ss:property label="Cherry Pick Request #"
							description="The cherry pick request number"
							value="#{cherryPickRequestViewer.cherryPickRequest.cherryPickRequestNumber}" />

						<ss:propertyGroup label="Screen">
							<ss:screenSummaryProperties
								screen="#{cherryPickRequestViewer.cherryPickRequest.screen}" />
						</ss:propertyGroup>

						<ss:property id="dateRequested" label="Date Requested" type="Date"
							description="The date the cherry pick request was made by the screener"
							value="#{cherryPickRequestViewer.cherryPickRequest.dateRequested}"
							editable="#{cherryPickRequestViewer.editMode}" />

						<ss:property id="requestedBy" label="Requested By"
							description="The screener that made the request"
							value="#{cherryPickRequestViewer.requestedBy}"
							editable="#{cherryPickRequestViewer.editMode}">
							<ui:define name="data">
								<ss:user user="#{value.selection}" />
							</ui:define>
							<ui:define name="editableData">
								<t:selectOneMenu id="performedByEditable" value="#{value.value}"
									styleClass="inputText selectMenu">
									<f:selectItems value="#{value.selectItems}" />
								</t:selectOneMenu>
							</ui:define>
						</ss:property>

						<ss:propertyGroup label="Volumes">
							<ss:property id="requestedVolume"
								label="Requested Volume"
								description="The volume per well that the screener requested"
								value="#{cherryPickRequestViewer.cherryPickRequest.transferVolumePerWellRequested}" type="Volume"
								editable="#{cherryPickRequestViewer.editMode &amp;&amp; !cherryPickRequestViewer.cherryPickRequest.allocated}"
								editWidth="5" />

							<ss:property id="approvedVolume"
								label="Approved Volume"
								ion="The volume per well approved by the screening room"
								value="#{cherryPickRequestViewer.cherryPickRequest.transferVolumePerWellApproved}" type="Volume"
								editable="#{cherryPickRequestViewer.editMode &amp;&amp; !cherryPickRequestViewer.cherryPickRequest.allocated}"
								editWidth="5" />

							<ss:property id="approvedBy" label="Approved By"
								description="The screening room staff member that approved this volume"
								value="#{cherryPickRequestViewer.volumeApprovedBy}"
								editable="#{cherryPickRequestViewer.editMode}">
								<ui:define name="data">
									<ss:user user="#{value.selection}" />
								</ui:define>
								<ui:define name="editableData">
									<t:selectOneMenu value="#{value.value}"
										styleClass="inputText selectMenu">
										<f:selectItems value="#{value.selectItems}" />
									</t:selectOneMenu>
								</ui:define>
							</ss:property>

							<ss:property id="dateVolumeApprovedEditable"
								label="Date Approved" type="Date"
								description="The date the cherry pick volume was approved"
								value="#{cherryPickRequestViewer.cherryPickRequest.dateVolumeApproved}"
								editable="#{cherryPickRequestViewer.editMode}" />
						</ss:propertyGroup>

						<ss:propertyGroup label="Plating Options">
							<ss:property id="plateType" label="Cherry Pick Plate Type"
								description="The plate type, e.g., 'Eppendorf', 'Marsh', etc."
								value="#{cherryPickRequestViewer.assayPlateType}">
								<ui:define name="data">
									<t:selectOneMenu value="#{value.value}"
										displayValueOnly="#{! cherryPickRequestViewer.editMode || cherryPickRequestViewer.cherryPickRequest.mapped}"
										displayValueOnlyStyleClass="dataText" styleClass="inputText">
										<f:selectItems value="#{value.selectItems}" />
									</t:selectOneMenu>
								</ui:define>
							</ss:property>

							<ss:property id="randomLayout" label="Random plate well layout"
								type="Boolean" 
								description="True when screener requested a random layout for the cherry pick plates"
								value="#{cherryPickRequestViewer.cherryPickRequest.randomizedAssayPlateLayout}"
								editable="#{cherryPickRequestViewer.editMode &amp;&amp; !cherryPickRequestViewer.cherryPickRequest.mapped}"
								styleClass="command" displayValueOnlyStyleClass="dataText" />

							<ss:property id="emptyWells" label="Wells to leave empty"
								description="The wells that should be left empty on the cherry pick plates. (e.g. 'Col:3, Row:H, B2, N18')"
								value="#{cherryPickRequestViewer.emptyWellsOnAssayPlate}"
								converter="#{cherryPickRequestViewer.emptyWellsConverter}"
								editable="#{cherryPickRequestViewer.editMode &amp;&amp; !cherryPickRequestViewer.cherryPickRequest.mapped}"
								editWidth="80" />
						</ss:propertyGroup>

						<ss:property id="cherryPickRequestComments" label="Comments"
							type="Textarea"
							description="Comments made by screening room staff"
							value="#{cherryPickRequestViewer.cherryPickRequest.comments}"
							editHeight="5" editWidth="80"
							editable="#{cherryPickRequestViewer.editMode}" />

						<ss:property id="screenerCherryPickCount"
							label="# Screener cherry picks"
							description="The number of screener cherry picks"
							value="#{cherryPickRequestViewer.screenerCherryPickCount}" />

						<ss:property id="labCherryPickCount" label="# Lab cherry picks"
							description="The number of lab cherry picks"
							value="#{cherryPickRequestViewer.labCherryPickCount}" />

						<ss:propertyGroup label="Work Status" columns="6"
							columnClasses="propertyLabelColumn,column,propertyLabelColumn,column,propertyLabelColumn,column"
							rendered="#{cherryPickRequestViewer.readAdmin}">
							<ss:property id="unfulfilledLabCherryPicksCount"
								label="# Unfulfilled Lab Cherry Picks"
								description="The number of unfulfilled lab cherry picks"
								value="#{cherryPickRequestViewer.cherryPickRequest.numberUnfulfilledLabCherryPicks}" />

							<ss:property id="assayPlatesCompletedCount"
								label="# Cherry Pick Plates Completed"
								description="The number of completed cherry pick plates"
								value="#{cherryPickRequestViewer.completedCherryPickPlatesCount} of #{cherryPickRequestViewer.activeCherryPickPlatesCount}" />

							<ss:property id="isCompleted" label="Completed"
								description="Has the cherry pick request been completed, such that all cherry pick plates have been plated"
								value="#{cherryPickRequestViewer.cherryPickRequest.plated}" />
						</ss:propertyGroup>
					</t:panelGrid>
				</t:panelGrid>
			</ui:define>
		</ss:collapsiblePanel>
	</h:form>

	<h:form id="screenCherryPicksPanelForm">

		<ss:collapsiblePanel id="screenerCherryPicksPanel"
			isCollapsed="#{cherryPickRequestViewer.isPanelCollapsedMap['screenerCherryPicks']}"
			label="Screener Cherry Picks">
			<ui:define name="content">

				<t:outputText value="Cherry picks have not yet been specified."
					styleClass="label"
					rendered="#{cherryPickRequestViewer.screenerCherryPickCount == 0 &amp;&amp; !cherryPickRequestViewer.editable}" />

				<t:panelGrid id="addCherryPicksAndHelpPanels" columns="2"
					columnClasses="column"
					rendered="#{cherryPickRequestViewer.screenerCherryPickCount == 0 &amp;&amp; cherryPickRequestViewer.editable}">
					<t:panelGrid id="addCherryPicksPanel" columns="1">
						<t:outputLabel for="cherryPicksInput"
							value="Specify cherry picks as plate/well pairs:"
							styleClass="label" />
						<t:inputTextarea id="cherryPicksInput" rows="30" cols="30"
							value="#{cherryPickRequestViewer.cherryPicksInput}"
							styleClass="inputText" />
						<t:commandButton id="addPoolCherryPicksCommand"
							value="Add Cherry Picks (Pool Wells)"
							action="#{cherryPickRequestViewer.addCherryPicksForPoolWells}"
							rendered="#{cherryPickRequestViewer.rnaiScreen}"
							styleClass="command"
							description="Add cherry picks, mapping from pool wells to duplex wells" />
						<t:commandButton id="addCherryPicksCommand"
							value="Add Cherry Picks"
							action="#{cherryPickRequestViewer.addCherryPicksForWells}"
							styleClass="command"
							description="Add cherry picks for the specified wells" />
					</t:panelGrid>
					<ui:include src="/help/libraries/wellFinderInputHelp.xhtml" />
				</t:panelGrid>

				<t:panelGrid id="viewScreenerCherryPicks" columns="1"
					rendered="#{cherryPickRequestViewer.screenerCherryPickCount > 0}">

					<!-- t:outputText
					value="WARNING: Cherry pick allowance has been exceeded! (#{cherryPickRequestViewer.cherryPickRequest.cherryPickAllowanceUsed} > #{cherryPickRequestViewer.cherryPickRequest.cherryPickAllowance})"
					rendered="#{!cherryPickRequestViewer.cherryPickRequest.mapped &amp;&amp; cherryPickRequestViewer.cherryPickRequest.cherryPickAllowanceUsed > cherryPickRequestViewer.cherryPickRequest.cherryPickAllowance}"
					styleClass="errorMessage" /-->

					<t:panelGroup id="screenerCherryPicksCommandPanel"
						styleClass="commandPanel"
						rendered="#{cherryPickRequestViewer.editable}">
						<t:commandButton id="deleteCherryPicks" value="Delete All"
							action="#{cherryPickRequestViewer.deleteAllCherryPicks}"
							disabled="#{cherryPickRequestViewer.cherryPickRequest.allocated}"
							styleClass="command"
							description="Delete all the screener cherry picks, so you can enter them again" />
					</t:panelGroup>

				</t:panelGrid>
			</ui:define>
		</ss:collapsiblePanel>
	</h:form>

	<!-- note: screenerCherryPickSearchResult must outside of above form, since searchResult has its own form -->
	<t:div
		rendered="#{! cherryPickRequestViewer.isPanelCollapsedMap['screenerCherryPicks']}">
		<ss:searchResult
			searchResults="#{cherryPickRequestViewer.screenerCherryPicksSearchResult}" />
	</t:div>


	<h:form id="labCherryPicksPanelForm">

		<ss:collapsiblePanel id="labCherryPicksPanel"
			isCollapsed="#{cherryPickRequestViewer.isPanelCollapsedMap['labCherryPicks']}"
			label="Lab Cherry Picks">
			<ui:define name="content">
				<t:panelGrid columns="1">
					<t:outputText value="Cherry picks have not yet been specified."
						styleClass="label"
						rendered="#{cherryPickRequestViewer.labCherryPickCount == 0}" />

					<t:panelGroup id="labCherryPicksCommandPanel"
						styleClass="commandPanel"
						rendered="#{cherryPickRequestViewer.editable &amp;&amp; cherryPickRequestViewer.labCherryPickCount > 0}">
						<t:commandButton id="viewCherryPickRequestWellVolumes"
							value="View Well Volumes"
							rendered="#{cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['librariesAdmin']}"
							action="#{cherryPickRequestViewer.viewCherryPickRequestWellVolumes}"
							disabled="#{cherryPickRequestViewer.screenerCherryPickCount == 0}"
							styleClass="command"
							title="View the available reagent volumes for the cherry picks on the cherry pick copy plates" />
						<t:commandButton
							id="viewCherryPickRequestWellVolumesForUnfulfilled"
							value="View Unfulfilled Well Volumes"
							rendered="#{cherryPickRequestViewer.screensaverUser.isUserInRoleOfNameMap['librariesAdmin']}"
							action="#{cherryPickRequestViewer.viewCherryPickRequestWellVolumesForUnfulfilled}"
							disabled="#{cherryPickRequestViewer.cherryPickRequest.numberUnfulfilledLabCherryPicks == 0}"
							styleClass="command"
							title="View the  available reagent volumes for the unfulfilled cherry picks on the cherry pick copy plates" />
						<t:commandButton id="allocateCherryPicks" value="Reserve reagent"
							action="#{cherryPickRequestViewer.allocateCherryPicks}"
							disabled="#{cherryPickRequestViewer.screenerCherryPickCount == 0 || cherryPickRequestViewer.cherryPickRequest.allocated}"
							styleClass="command"
							title="Reserve reagent for the cherry picks from the cherry pick copy plates" />
						<t:commandButton id="deallocateCherryPicks"
							value="Cancel Reservation"
							action="#{cherryPickRequestViewer.deallocateCherryPicks}"
							disabled="#{!cherryPickRequestViewer.cherryPickRequest.allocated || cherryPickRequestViewer.cherryPickRequest.mapped}"
							styleClass="command"
							title="Cancel the reagent reservations from the cherry pick copy plates" />
						<t:commandButton id="plateMapCherryPicks" value="Map to Plates"
							action="#{cherryPickRequestViewer.plateMapCherryPicks}"
							disabled="#{!cherryPickRequestViewer.cherryPickRequest.allocated || cherryPickRequestViewer.cherryPickRequest.mapped}"
							styleClass="command"
							title="Choose plate number and destination well for the cherry picks" />
						<t:commandButton id="createCherryPickRequestForUnfulfilled"
							value="New Cherry Pick Request for Unfulfilled"
							disabled="#{!cherryPickRequestViewer.cherryPickRequest.allocated || cherryPickRequestViewer.cherryPickRequest.numberUnfulfilledLabCherryPicks == 0}"
							action="#{cherryPickRequestViewer.createNewCherryPickRequestForUnfulfilledCherryPicks}"
							styleClass="command"
							title="Create a new cherry pick request consisting of the unfulfilled cherry picks" />
						<t:outputLabel for="showFailedLabCherryPicks" value="Show failed:"
							styleClass="label"
							title="Show or hide lab cherry picks on failed assay plate attempts" />
						<t:selectBooleanCheckbox id="showFailedLabCherryPicks"
							value="#{cherryPickRequestViewer.showFailedLabCherryPicks}"
							valueChangeListener="#{cherryPickRequestViewer.toggleShowFailedLabCherryPicks}"
							onchange="javascript:document.getElementById('toggleShowFailedLabCherryPicksCommand').click()"
							immediate="true" styleClass="command"
							title="Show or hide failed lab cherry picks" />
						<t:commandButton id="toggleShowFailedLabCherryPicksCommand"
							immediate="true" forceId="true" style="display:none" />

					</t:panelGroup>
				</t:panelGrid>
			</ui:define>
		</ss:collapsiblePanel>
	</h:form>

	<!-- note: labCherryPickSearchResult must outside of above form, since searchResult has its own form -->
	<t:div
		rendered="#{! cherryPickRequestViewer.isPanelCollapsedMap['labCherryPicks']}">
		<ss:searchResult
			searchResults="#{cherryPickRequestViewer.labCherryPicksSearchResult}" />
	</t:div>


	<h:form id="cherryPickPlatesForm">

		<ss:collapsiblePanel id="cherryPickPlatesPanel"
			isCollapsed="#{cherryPickRequestViewer.isPanelCollapsedMap['cherryPickPlates']}"
			label="Cherry Pick Plates">
			<ui:define name="content">
				<t:panelGrid columns="1">
					<t:outputText value="&lt;none&gt;" styleClass="label"
						rendered="#{!cherryPickRequestViewer.cherryPickRequest.mapped}" />

					<t:panelGroup styleClass="commandPanel"
						rendered="#{cherryPickRequestViewer.editable &amp;&amp; cherryPickRequestViewer.cherryPickRequest.mapped}">
						<t:commandButton id="downloadPlateMappingFiles"
							value="Download Files for Selected Plates"
							action="#{cherryPickRequestViewer.downloadPlateMappingFilesForSelectedAssayPlates}"
							disabled="#{!cherryPickRequestViewer.cherryPickRequest.mapped}"
							styleClass="command"
							title="Download the input files for the liquid transfer equipment" />
						<t:outputLabel for="showFailedAssayPlates"
							value="Show all failed plate attempts:" styleClass="label"
							title="Show or hide the assay plate attempts that failed" />
						<t:selectBooleanCheckbox id="showFailedAssayPlates"
							value="#{cherryPickRequestViewer.showFailedAssayPlates}"
							valueChangeListener="#{cherryPickRequestViewer.toggleShowFailedAssayPlates}"
							onchange="javascript:document.getElementById('toggleShowFailedAssayPlatesCommand').click()"
							immediate="true" styleClass="command"
							title="Show or hide the failed assay plates" />
						<t:commandButton id="toggleShowFailedAssayPlatesCommand"
							forceId="true" immediate="true" style="display:none" />
					</t:panelGroup>

					<t:outputText
						value="WARNING: Some cherry pick plates will be created from the same source plate!  Be aware that you will need to reload one or more source plates."
						rendered="#{cherryPickRequestViewer.cherryPickRequest.sourcePlateReloadRequired}"
						styleClass="errorMessage" />

					<t:message for="assayPlatesTable" styleClass="errorMessage" />
					<t:dataTable id="assayPlatesTable" forceId="true"
						var="assayPlateRow"
						value="#{cherryPickRequestViewer.assayPlatesDataModel}"
						styleClass="standardTable" columnClasses="column"
						rowClasses="row1,row2" headerClass="tableHeader"
						rendered="#{cherryPickRequestViewer.cherryPickRequest.mapped}">
						<t:column>
							<f:facet name="header">
								<t:selectBooleanCheckbox id="selectAll"
									value="#{cherryPickRequestViewer.selectAllAssayPlates}"
									onclick="document.getElementById('selectAllAssayPlatesButton').click()" />
							</f:facet>
							<t:selectBooleanCheckbox value="#{assayPlateRow.selected}" />
						</t:column>
						<t:columns
							value="#{cherryPickRequestViewer.assayPlatesColumnModel}"
							var="columnName" styleClass="column">
							<f:facet name="header">
								<t:outputText value="#{columnName}" />
							</f:facet>
							<t:outputText
								value="#{assayPlateRow.columnName2Value[columnName]}" />
						</t:columns>
					</t:dataTable>

					<t:panelGrid id="createCherryPickLiquidTransferCommandPanel"
						columns="1" styleClass="commandPanel groupingPanel"
						rendered="#{cherryPickRequestViewer.editable &amp;&amp; cherryPickRequestViewer.cherryPickRequest.mapped}">

						<div class="label">Update the status for a set of plates by
						selecting them (above), enter a comment (optional), and then click
						the appropriate button (below). Note:
						<ul>
							<li>'Plated' indicates the cherry pick plate(s) were
							successfully plated and the requested reagent volume was removed
							from the library copy source plate(s).</li>
							<li>'Failed' indicates the cherry pick plate(s) could not be
							created due to a physical problem, but the requested reagent
							volume was removed from the library copy source plate(s). A new
							set of Lab Cherry Picks will be created for the next attempt at
							creating the cherry pick plate(s), reserving additional reagent
							volume from the library copy source plate(s).</li>
							<li>'Canceled' indicates that the creation of the cherry
							pick plate(s) was not attempted and will not be attempted. The
							requested reagent volume was not removed from the library copy
							source plate(s) and will be made available for use by other
							Cherry Pick Requests.</li>
						</ul>
						</div>

						<t:panelGroup>
							<t:outputLabel for="liquidTransferPerformedBy"
								value="Performed by:" styleClass="label"
								title="The screening lab staff member who performed the transfer" />
							<t:selectOneMenu id="liquidTransferPerformedBy"
								value="#{cherryPickRequestViewer.liquidTransferPerformedBy.value}"
								rendered="#{cherryPickRequestViewer.editable}"
								styleClass="inputText">
								<f:selectItems
									value="#{cherryPickRequestViewer.liquidTransferPerformedBy.selectItems}" />
							</t:selectOneMenu>
							<t:outputLabel for="dateOfLiquidTransfer" value="Date:"
								styleClass="label"
								title="The date the reagent transfer took place" />
							<t:inputText id="dateOfLiquidTransfer"
								value="#{cherryPickRequestViewer.dateOfLiquidTransfer}"
								converter="#{dateConverter}"
								rendered="#{cherryPickRequestViewer.editable}"
								styleClass="inputText" />
							<t:outputLabel for="liquidTransferComments" value="Comments:"
								styleClass="label"
								title="Screening room staff comments for the reagent transfer" />
							<t:inputText id="liquidTransferComments"
								value="#{cherryPickRequestViewer.liquidTransferComments}"
								rendered="#{cherryPickRequestViewer.editable}"
								styleClass="inputText" />
						</t:panelGroup>

						<t:panelGroup>
							<t:commandButton id="recordLiquidTransfer"
								value="Record Selected Plates as 'Plated'"
								action="#{cherryPickRequestViewer.recordLiquidTransferForSelectedAssayPlates}"
								disabled="#{!cherryPickRequestViewer.cherryPickRequest.mapped}"
								styleClass="command" title="Record successful reagent transfer" />
							<t:commandButton id="recordFailureOfAssayPlates"
								value="Record Selected Plates as 'Failed'"
								disabled="#{!cherryPickRequestViewer.cherryPickRequest.mapped}"
								action="#{cherryPickRequestViewer.recordFailureOfAssayPlates}"
								styleClass="command"
								title="Record unsuccessful reagent transfer" />
							<t:commandButton id="cancelAssayPlates"
								value="Cancel Selected Plates"
								disabled="#{!cherryPickRequestViewer.cherryPickRequest.mapped}"
								action="#{cherryPickRequestViewer.deallocateCherryPicksByPlate}"
								styleClass="command"
								title="Canceling a plate will undo its reservation of reagent volumes." />
						</t:panelGroup>
					</t:panelGrid>

					<t:commandButton id="selectAllAssayPlatesButton" forceId="true"
						action="#{cherryPickRequestViewer.selectAllAssayPlates}"
						rendered="#{cherryPickRequestViewer.cherryPickRequest.mapped}"
						style="display:none" />

				</t:panelGrid>
			</ui:define>
		</ss:collapsiblePanel>

	</h:form>

</ui:composition>

</html>

